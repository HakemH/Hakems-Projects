{"ast":null,"code":"// // import React, { useState } from \"react\";\n// // import { registerUser } from \"./AuthService\";\n\n// // const Register = () => {\n// //     const [email, setEmail] = useState(\"\");\n// //     const [password, setPassword] = useState(\"\");\n// //     const [message, setMessage] = useState(\"\");\n\n// //     const handleRegister = async (e) => {\n// //         e.preventDefault();\n// //         const response = await registerUser({ email, password });\n// //         setMessage(response);\n// //     };\n\n// //     return (\n// //         <div>\n// //             <h2>Register</h2>\n// //             <form onSubmit={handleRegister}>\n// //                 <input\n// //                     type=\"email\"\n// //                     placeholder=\"Email\"\n// //                     value={email}\n// //                     onChange={(e) => setEmail(e.target.value)}\n// //                     required\n// //                 />\n// //                 <input\n// //                     type=\"password\"\n// //                     placeholder=\"Password\"\n// //                     value={password}\n// //                     onChange={(e) => setPassword(e.target.value)}\n// //                     required\n// //                 />\n// //                 <button type=\"submit\">Register</button>\n// //             </form>\n// //             {message && <p>{message}</p>}\n// //         </div>\n// //     );\n// // };\n\n// // export default Register;\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { registerUser } from \"./AuthService\";\n\n// const Register = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n//     const [error, setError] = useState(null);\n//     const [isSuccess, setIsSuccess] = useState(false);\n//     const navigate = useNavigate();\n\n//     const handleRegister = async (e) => {\n//         e.preventDefault();\n//         setMessage(\"\");\n//         setError(null);\n//         setIsSuccess(false);\n//         console.log(\"Sending registration request:\", { email, password });\n\n//         try {\n//             const response = await registerUser({ email, password });\n//             if (response === \"User registered successfully!\") {\n//                 setIsSuccess(true);\n//                 setMessage(\"REGISTRATION SUCCESSFUL\");\n//                 setTimeout(() => {\n//                     navigate(\"/login\"); // Redirect to login after 2 seconds\n//                 }, 2000);\n//             } else {\n//                 setMessage(response);\n//             }\n//         } catch (error) {\n//             console.error(\"Network error during registration:\", error.message);\n//             setError(\"Network error: \" + error.message);\n//         }\n//     };\n\n//     return (\n//         <div style={styles.container}>\n//             {isSuccess ? (\n//                 <div style={styles.successMessage}>\n//                     <h1 style={styles.successText}>REGISTRATION SUCCESSFUL</h1>\n//                 </div>\n//             ) : (\n//                 <form onSubmit={handleRegister} style={styles.form}>\n//                     <input\n//                         type=\"email\"\n//                         placeholder=\"Email\"\n//                         value={email}\n//                         onChange={(e) => setEmail(e.target.value)}\n//                         required\n//                         style={styles.input}\n//                     />\n//                     <input\n//                         type=\"password\"\n//                         placeholder=\"Password\"\n//                         value={password}\n//                         onChange={(e) => setPassword(e.target.value)}\n//                         required\n//                         style={styles.input}\n//                     />\n//                     <button type=\"submit\" style={styles.button}>Register</button>\n//                 </form>\n//             )}\n//             {!isSuccess && message && (\n//                 <p style={{ color: message === \"User already exists!\" ? \"red\" : \"green\", textAlign: \"center\" }}>\n//                     {message}\n//                 </p>\n//             )}\n//             {!isSuccess && error && (\n//                 <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// const styles = {\n//     container: {\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100%\",\n//     },\n//     form: {\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         gap: \"10px\",\n//         width: \"100%\",\n//     },\n//     input: {\n//         padding: \"8px\",\n//         borderRadius: \"4px\",\n//         border: \"1px solid #ccc\",\n//     },\n//     button: {\n//         padding: \"8px\",\n//         borderRadius: \"4px\",\n//         border: \"none\",\n//         backgroundColor: \"#007bff\",\n//         color: \"#fff\",\n//         cursor: \"pointer\",\n//     },\n//     successMessage: {\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//         alignItems: \"center\",\n//         height: \"100%\",\n//     },\n//     successText: {\n//         fontSize: \"48px\",\n//         fontWeight: \"bold\",\n//         color: \"green\",\n//         textAlign: \"center\",\n//     },\n// };\n\n// export default Register;","map":{"version":3,"names":[],"sources":["C:/Users/koko6/Downloads/projects/authservice/authservice/authservice-frontend/src/Register.js"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import { registerUser } from \"./AuthService\";\r\n\r\n// // const Register = () => {\r\n// //     const [email, setEmail] = useState(\"\");\r\n// //     const [password, setPassword] = useState(\"\");\r\n// //     const [message, setMessage] = useState(\"\");\r\n\r\n// //     const handleRegister = async (e) => {\r\n// //         e.preventDefault();\r\n// //         const response = await registerUser({ email, password });\r\n// //         setMessage(response);\r\n// //     };\r\n\r\n// //     return (\r\n// //         <div>\r\n// //             <h2>Register</h2>\r\n// //             <form onSubmit={handleRegister}>\r\n// //                 <input\r\n// //                     type=\"email\"\r\n// //                     placeholder=\"Email\"\r\n// //                     value={email}\r\n// //                     onChange={(e) => setEmail(e.target.value)}\r\n// //                     required\r\n// //                 />\r\n// //                 <input\r\n// //                     type=\"password\"\r\n// //                     placeholder=\"Password\"\r\n// //                     value={password}\r\n// //                     onChange={(e) => setPassword(e.target.value)}\r\n// //                     required\r\n// //                 />\r\n// //                 <button type=\"submit\">Register</button>\r\n// //             </form>\r\n// //             {message && <p>{message}</p>}\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default Register;\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import { registerUser } from \"./AuthService\";\r\n\r\n// const Register = () => {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\");\r\n//     const [error, setError] = useState(null);\r\n//     const [isSuccess, setIsSuccess] = useState(false);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleRegister = async (e) => {\r\n//         e.preventDefault();\r\n//         setMessage(\"\");\r\n//         setError(null);\r\n//         setIsSuccess(false);\r\n//         console.log(\"Sending registration request:\", { email, password });\r\n\r\n//         try {\r\n//             const response = await registerUser({ email, password });\r\n//             if (response === \"User registered successfully!\") {\r\n//                 setIsSuccess(true);\r\n//                 setMessage(\"REGISTRATION SUCCESSFUL\");\r\n//                 setTimeout(() => {\r\n//                     navigate(\"/login\"); // Redirect to login after 2 seconds\r\n//                 }, 2000);\r\n//             } else {\r\n//                 setMessage(response);\r\n//             }\r\n//         } catch (error) {\r\n//             console.error(\"Network error during registration:\", error.message);\r\n//             setError(\"Network error: \" + error.message);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div style={styles.container}>\r\n//             {isSuccess ? (\r\n//                 <div style={styles.successMessage}>\r\n//                     <h1 style={styles.successText}>REGISTRATION SUCCESSFUL</h1>\r\n//                 </div>\r\n//             ) : (\r\n//                 <form onSubmit={handleRegister} style={styles.form}>\r\n//                     <input\r\n//                         type=\"email\"\r\n//                         placeholder=\"Email\"\r\n//                         value={email}\r\n//                         onChange={(e) => setEmail(e.target.value)}\r\n//                         required\r\n//                         style={styles.input}\r\n//                     />\r\n//                     <input\r\n//                         type=\"password\"\r\n//                         placeholder=\"Password\"\r\n//                         value={password}\r\n//                         onChange={(e) => setPassword(e.target.value)}\r\n//                         required\r\n//                         style={styles.input}\r\n//                     />\r\n//                     <button type=\"submit\" style={styles.button}>Register</button>\r\n//                 </form>\r\n//             )}\r\n//             {!isSuccess && message && (\r\n//                 <p style={{ color: message === \"User already exists!\" ? \"red\" : \"green\", textAlign: \"center\" }}>\r\n//                     {message}\r\n//                 </p>\r\n//             )}\r\n//             {!isSuccess && error && (\r\n//                 <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// const styles = {\r\n//     container: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100%\",\r\n//     },\r\n//     form: {\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         gap: \"10px\",\r\n//         width: \"100%\",\r\n//     },\r\n//     input: {\r\n//         padding: \"8px\",\r\n//         borderRadius: \"4px\",\r\n//         border: \"1px solid #ccc\",\r\n//     },\r\n//     button: {\r\n//         padding: \"8px\",\r\n//         borderRadius: \"4px\",\r\n//         border: \"none\",\r\n//         backgroundColor: \"#007bff\",\r\n//         color: \"#fff\",\r\n//         cursor: \"pointer\",\r\n//     },\r\n//     successMessage: {\r\n//         display: \"flex\",\r\n//         justifyContent: \"center\",\r\n//         alignItems: \"center\",\r\n//         height: \"100%\",\r\n//     },\r\n//     successText: {\r\n//         fontSize: \"48px\",\r\n//         fontWeight: \"bold\",\r\n//         color: \"green\",\r\n//         textAlign: \"center\",\r\n//     },\r\n// };\r\n\r\n// export default Register;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}