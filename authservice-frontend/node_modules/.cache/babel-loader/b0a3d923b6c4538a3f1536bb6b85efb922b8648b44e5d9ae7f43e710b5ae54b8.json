{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koko6\\\\Downloads\\\\projects\\\\authservice\\\\authservice\\\\authservice-frontend\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { registerUser } from \"./AuthService\";\n\n// const Register = () => {\n//     const [email, setEmail] = useState(\"\");\n//     const [password, setPassword] = useState(\"\");\n//     const [message, setMessage] = useState(\"\");\n\n//     const handleRegister = async (e) => {\n//         e.preventDefault();\n//         const response = await registerUser({ email, password });\n//         setMessage(response);\n//     };\n\n//     return (\n//         <div>\n//             <h2>Register</h2>\n//             <form onSubmit={handleRegister}>\n//                 <input\n//                     type=\"email\"\n//                     placeholder=\"Email\"\n//                     value={email}\n//                     onChange={(e) => setEmail(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Password\"\n//                     value={password}\n//                     onChange={(e) => setPassword(e.target.value)}\n//                     required\n//                 />\n//                 <button type=\"submit\">Register</button>\n//             </form>\n//             {message && <p>{message}</p>}\n//         </div>\n//     );\n// };\n\n// export default Register;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { registerUser } from \"./AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setError(null);\n    setIsSuccess(false);\n    console.log(\"Sending registration request:\", {\n      email,\n      password\n    });\n    try {\n      const response = await registerUser({\n        email,\n        password\n      });\n      if (response === \"User registered successfully!\") {\n        setIsSuccess(true);\n        setMessage(\"REGISTRATION SUCCESSFUL\");\n        setTimeout(() => {\n          navigate(\"/login\"); // Redirect to login after 2 seconds\n        }, 2000);\n      } else {\n        setMessage(response);\n      }\n    } catch (error) {\n      console.error(\"Network error during registration:\", error.message);\n      setError(\"Network error: \" + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [isSuccess ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.successMessage,\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.successText,\n        children: \"REGISTRATION SUCCESSFUL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      style: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: styles.button,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), !isSuccess && message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: message === \"User already exists!\" ? \"red\" : \"green\",\n        textAlign: \"center\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this), !isSuccess && error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"q4TfCHcrea0HFRp/8d1QjsnZ1hw=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nconst styles = {\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"10px\",\n    width: \"100%\"\n  },\n  input: {\n    padding: \"8px\",\n    borderRadius: \"4px\",\n    border: \"1px solid #ccc\"\n  },\n  button: {\n    padding: \"8px\",\n    borderRadius: \"4px\",\n    border: \"none\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  },\n  successMessage: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  successText: {\n    fontSize: \"48px\",\n    fontWeight: \"bold\",\n    color: \"green\",\n    textAlign: \"center\"\n  }\n};\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","registerUser","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","message","setMessage","error","setError","isSuccess","setIsSuccess","navigate","handleRegister","e","preventDefault","console","log","response","setTimeout","style","styles","container","children","successMessage","successText","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","form","type","placeholder","value","onChange","target","required","input","button","color","textAlign","_c","display","flexDirection","justifyContent","alignItems","height","gap","width","padding","borderRadius","border","backgroundColor","cursor","fontSize","fontWeight","$RefreshReg$"],"sources":["C:/Users/koko6/Downloads/projects/authservice/authservice/authservice-frontend/src/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { registerUser } from \"./AuthService\";\r\n\r\n// const Register = () => {\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [password, setPassword] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\");\r\n\r\n//     const handleRegister = async (e) => {\r\n//         e.preventDefault();\r\n//         const response = await registerUser({ email, password });\r\n//         setMessage(response);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Register</h2>\r\n//             <form onSubmit={handleRegister}>\r\n//                 <input\r\n//                     type=\"email\"\r\n//                     placeholder=\"Email\"\r\n//                     value={email}\r\n//                     onChange={(e) => setEmail(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Password\"\r\n//                     value={password}\r\n//                     onChange={(e) => setPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">Register</button>\r\n//             </form>\r\n//             {message && <p>{message}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Register;\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { registerUser } from \"./AuthService\";\r\n\r\nconst Register = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [isSuccess, setIsSuccess] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        setError(null);\r\n        setIsSuccess(false);\r\n        console.log(\"Sending registration request:\", { email, password });\r\n\r\n        try {\r\n            const response = await registerUser({ email, password });\r\n            if (response === \"User registered successfully!\") {\r\n                setIsSuccess(true);\r\n                setMessage(\"REGISTRATION SUCCESSFUL\");\r\n                setTimeout(() => {\r\n                    navigate(\"/login\"); // Redirect to login after 2 seconds\r\n                }, 2000);\r\n            } else {\r\n                setMessage(response);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Network error during registration:\", error.message);\r\n            setError(\"Network error: \" + error.message);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            {isSuccess ? (\r\n                <div style={styles.successMessage}>\r\n                    <h1 style={styles.successText}>REGISTRATION SUCCESSFUL</h1>\r\n                </div>\r\n            ) : (\r\n                <form onSubmit={handleRegister} style={styles.form}>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                        style={styles.input}\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        required\r\n                        style={styles.input}\r\n                    />\r\n                    <button type=\"submit\" style={styles.button}>Register</button>\r\n                </form>\r\n            )}\r\n            {!isSuccess && message && (\r\n                <p style={{ color: message === \"User already exists!\" ? \"red\" : \"green\", textAlign: \"center\" }}>\r\n                    {message}\r\n                </p>\r\n            )}\r\n            {!isSuccess && error && (\r\n                <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        gap: \"10px\",\r\n        width: \"100%\",\r\n    },\r\n    input: {\r\n        padding: \"8px\",\r\n        borderRadius: \"4px\",\r\n        border: \"1px solid #ccc\",\r\n    },\r\n    button: {\r\n        padding: \"8px\",\r\n        borderRadius: \"4px\",\r\n        border: \"none\",\r\n        backgroundColor: \"#007bff\",\r\n        color: \"#fff\",\r\n        cursor: \"pointer\",\r\n    },\r\n    successMessage: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100%\",\r\n    },\r\n    successText: {\r\n        fontSize: \"48px\",\r\n        fontWeight: \"bold\",\r\n        color: \"green\",\r\n        textAlign: \"center\",\r\n    },\r\n};\r\n\r\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}